<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="com.silvermining.demo.entity.UsuarioMayor"
           table="USUARIO_MAYOR" schema="TESTING_2">
        <id name="id" type="java.lang.Long">
            <column name="ID" scale="0" />
            <generator class="sequence">
                <param name="sequence">seq_usuario_mayor</param>
            </generator>
        </id>
        <property name="profesion" type="string">
            <column name="PROFESION" />
        </property>
        <many-to-one name="usuario" class="com.silvermining.demo.entity.Usuario"
                     fetch="select" lazy="false">
            <column name="USERID" not-null="true" />
        </many-to-one>
        <set name="listaPerfiles" table="PERFIL"
             inverse="false" lazy="false" fetch="select" cascade="all">
            <key>
                <column name="USUARIOMAYORID" not-null="true" />
            </key>
            <many-to-many class="com.silvermining.demo.entity.Perfil">
                <column name="PERFILID" not-null="true" />
            </many-to-many>
        </set>
    </class>

    <resultset name="usuarioMayorUsuario">
        <return alias="usuarioMayor"
                class="com.silvermining.demo.entity.UsuarioMayor"></return>
        <return-join alias="usuario"
                     property="usuarioMayor.usuario"></return-join>
    </resultset>
    <sql-query name="getUsuarioMayorPorNombre"
               resultset-ref="usuarioMayorUsuario">
        <![CDATA[
            SELECT
               um.ID as {usuarioMayor.id},
               um.PROFESION as {usuarioMayor.profesion},
               um.USERID as {usuarioMayor.usuario},
               u.ID AS {usuario.id},
               u.NAME AS {usuario.nombre},
               u.PASSWORD AS {usuario.password}
            FROM
                TESTING_2.usuario_mayor um
            JOIN
                usuario u ON u.id = um.userid
            WHERE
                u.name = :nombre
        ]]>
    </sql-query>

    <!-- <sql-query name="getUsuarioMayorPorNombre">
        <return alias="usuarioMayor"
                class="com.silvermining.demo.entity.UsuarioMayor">
            <return-property name="id" column="ID"></return-property>
            <return-property name="profesion" column="PROFESION"></return-property>
            <return-property name="usuario" column="USERID"></return-property>
        </return>
        <return-join alias="usuario" property="usuarioMayor.usuario">
            <return-property name="id" column="ID"></return-property>
            <return-property name="nombre" column="NAME"></return-property>
            <return-property name="password" column="PASSWORD"></return-property>
        </return-join>
        <![CDATA[
            SELECT
               um.ID as {usuarioMayor.id},
               um.PROFESION as {usuarioMayor.profesion},
               um.USERID as {usuarioMayor.usuario},
               u.ID AS {usuario.id},
               u.NAME AS {usuario.nombre},
               u.PASSWORD AS {usuario.password}
            FROM
                usuario_mayor um
            LEFT OUTER JOIN
                usuario u ON u.id = um.userid
            WHERE
                um.profesion = :nombre
        ]]>
    </sql-query>-->
</hibernate-mapping>
